---
- name: 'Default | verify'
  hosts: 'all'
  gather_facts: false
  become: true
  tasks:
    - name: 'Default | verify | locales'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: 'Default | verify | locales'
        test_src: 'files/locale'
        test_file: '/etc/default/locale'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    - name: 'Default | verify | timezone'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: 'Default | verify | timezone'
        test_src: 'files/timezone'
        test_file: '/etc/timezone'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    # TODO(role): use the test template?
    - name: 'Default | verify | query MOTD'
      ansible.builtin.copy:
        content: ''
        dest: '/etc/motd'
        owner: 'root'
        group: 'root'
        mode: '0644'
      check_mode: true
      diff: true
      register: _test_os_motd

    - name: 'Default | verify | assert correct MOTD'
      ansible.builtin.assert:
        quiet: true
        that:
          - not _test_os_motd.changed
        fail_msg: '✘ /etc/motd should be empty ({{ _test_os_motd.diff }}).'

    - name: 'Default | verify | MOTD reboot notification'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: 'Default | verify | MOTD reboot notification'
        test_file: '/etc/update-motd.d/98-reboot-required'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0755'
        test_state: 'file'

    - name: 'Default | verify | query inotify'
      ansible.builtin.command: 'sysctl --values fs.inotify.max_user_watches'
      register: _test_os_inotify
      changed_when: false

    - name: 'Default | verify | assert inotify set'
      ansible.builtin.assert:
        quiet: true
        that:
          - _test_os_inotify.stdout | int == 1048576
        fail_msg: >
          ✘ sysctl should report fs.inotify.max_user_watches=1048576
          ({{ _test_os_inotify.stdout }}).

    - name: 'Default | verify | query skeleton files'
      ansible.builtin.find:
        paths: '/etc/skel'
        recurse: false
        hidden: true
        file_type: 'file'
      register: _test_os_skel

    - name: 'Default | verify | assert default skeleton files'
      ansible.builtin.assert:
        quiet: true
        that:
          - _test_os_skel.files | length == 3
        fail_msg: '✘ /etc/skel/{.bash_logout,.bashrc,.profile} not found.'

    # auto_reboot uses r_pufky.deb.systemd. Confirm both files exist and test
    # static reboot.timer for correctness.
    - name: 'Default | verify | reboot.timer'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: 'Default | verify | reboot.timer'
        test_src: 'files/reboot.timer'
        test_file: '/etc/systemd/system/reboot.timer'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    - name: 'Default | verify | reboot.service'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: 'Default | verify | reboot.service'
        test_file: '/etc/systemd/system/reboot.service'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'
        test_state: 'file'

    # Vagrant user automatically created for VMs; check that is locked down.
    - name: 'Default | verify | query home lockdown'
      ansible.builtin.stat:
        path: '/home/vagrant/.bashrc'
      register: _test_os_lockdown

    - name: 'Default | verify | assert home lockdown'
      ansible.builtin.assert:
        quiet: true
        that:
          - _test_os_lockdown.stat.exists
          - _test_os_lockdown.stat.gr_name == 'vagrant'
          - _test_os_lockdown.stat.pw_name == 'vagrant'
          - _test_os_lockdown.stat.mode == '0600'
        fail_msg: '✘ /home not locked down. Expected (D: go-rwx, F: go-rwx).'

    - name: 'Default | verify | query expected /etc/fstab'
      ansible.builtin.slurp:
        path: '/etc/fstab'
      register: _test_os_tmp

    # yamllint disable rule:line-length
    - name: 'Default | verify | assert expected fstab'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"tmpfs /tmp tmpfs defaults,size=1% 0 0" in _test_os_tmp.content | b64decode'
        fail_msg: >
          ✘ /etc/fstab should have 'tmpfs /tmp tmpfs defaults,size=1% 0 0' but
          does not: {{ _test_os_tmp.content | b64decode }}.
